salveaza(Fisier):-
        jocSliding(A),
        jocXsi0(B),
        jocDilema(C),
        jocHunter(D),
        jocSudoku(E),
        jocFoarfecahartiepiatra(F),
        nivelSelectat(G),
        seJoaca(H),
        locatieJucator(I),
        cod_birou(J),
        locatieObiect(carteLitera3,JJ),
        locatieObiect(scrisoareLitera1,K),
        locatieObiect(ghicitoare,L),
        locatieObiect(cheie,M),
        locatieObiect(seif,N),
        locatieObiect(carteLitera2,O),
        locatieObiect(bilet,P),
        locatieObiect(lanterna,Q),
        locatieObiect(mar,R),
        locatieObiect(biscuit,S),
        locatieObiect(scrisoareLitera5,T),
        locatieObiect(carteLitera4,U),
        locatieObiect(bandaj,LocatieB),
        locatieObiect(baterie,LocatieBaterie),
        energieJucator(V),
        raspunsGhicitoare(X),
        viata(Y),
        amInceput(Z),
        codReal(Z1),
        litera1(Lit1),
        litera2(Lit2),
        litera3(Lit3),
        litera4(Lit4),
        litera5(Lit5),
        atom_concat('LucrareFilipAlin\\salvari\\',Fisier,Cale),
        atom_concat(Cale,'.txt',Cale1),
        downcase_atom(Z1,Z11),
        downcase_atom(Lit1,Lit11),
        downcase_atom(Lit2,Lit21),
        downcase_atom(Lit3,Lit31),
        downcase_atom(Lit4,Lit41),
        downcase_atom(Lit5,Lit51),
        camerePericol(CamereCapcane),
        determinaStareCapcane(CamereCapcane,NrCapcane),
        camereParcurse(CamereParcurse),
        numarGhicitoare(NRG),
        utilizareLanterna(UtilizareLanterna),
        numarPlanCasa(NRH),
        tell(Cale1),
        write(A),write('.\n'),
        write(B),write('.\n'),
        write(C),write('.\n'),
        write(D),write('.\n'),
        write(E),write('.\n'),
        write(F),write('.\n'),
        write(G),write('.\n'),
        write(H),write('.\n'),
        write(I),write('.\n'),
        write(J),write('.\n'),
        write(JJ),write('.\n'),
        write(K),write('.\n'),
        write(L),write('.\n'),
        write(M),write('.\n'),
        write(N),write('.\n'),
        write(O),write('.\n'),
        write(P),write('.\n'),
        write(Q),write('.\n'),
        write(R),write('.\n'),
        write(S),write('.\n'),
        write(T),write('.\n'),
        write(U),write('.\n'),
        write(V),write('.\n'),
        write(X),write('.\n'),
        write(Y),write('.\n'),
        write(Z),write('.\n'),
        write(Z11),write('.\n'),
        write(Lit11),write('.\n'),
        write(Lit21),write('.\n'),
        write(Lit31),write('.\n'),
        write(Lit41),write('.\n'),
        write(Lit51),write('.\n'), 
        write(NrCapcane),write('.\n'), 
        write(CamereParcurse),write('.\n'), 
        write(NRG),write('.\n'),
        write(LocatieB),write('.\n'),
        write(UtilizareLanterna),write('.\n'),
        write(NRH),write('.\n'),
        write(LocatieBaterie),write('.\n'),
        told.


incarca(Fisier):-
        golire(),
        atom_concat('LucrareFilipAlin\\salvari\\',Fisier,Cale),
        atom_concat(Cale,'.txt',Cale1),
        exists_file(Cale1),
        see(Cale1),
        read(A),
        read(B),
        read(C),
        read(D),
        read(E),
        read(F),
        read(G),
        read(H),
        read(I),
        read(J),
        read(JJ),
        read(K),
        read(L),
        read(M),
        read(N),
        read(O),
        read(P),
        read(Q),
        read(R),
        read(S),
        read(T),
        read(U),
        read(V),
        read(X),
        read(Y),
        read(Z),
        read(Z1),
        read(Lit1),
        read(Lit2),
        read(Lit3),
        read(Lit4),
        read(Lit5),
        read(NrCapcane),
        read(CamereParcurse),
        read(NRG),
        read(LocatieB),
        read(UtilizareLanterna),
        read(NRH),
        read(LocatieBaterie),
        seen,
        upcase_atom(Z1,Z11),
        upcase_atom(Lit1,Lit11),
        upcase_atom(Lit2,Lit21),
        upcase_atom(Lit3,Lit31),
        upcase_atom(Lit4,Lit41),
        upcase_atom(Lit5,Lit51),
        retract(jocSliding(_)),
        assert(jocSliding(A)),
        retract(jocXsi0(_)),
        assert(jocXsi0(B)),
        retract(jocDilema(_)),
        assert(jocDilema(C)),
        retract(jocHunter(_)),
        assert(jocHunter(D)),
        retract(jocSudoku(_)),
        assert(jocSudoku(E)),
        retract(jocFoarfecahartiepiatra(_)),
        assert(jocFoarfecahartiepiatra(F)),
        retract(nivelSelectat(_)),
        assert(nivelSelectat(G)),
        retract(seJoaca(_)),
        assert(seJoaca(H)),
        retract(locatieJucator(_)),
        assert(locatieJucator(I)),
        retract(cod_birou(_)),
        assert(cod_birou(J)),
        retract(locatieObiect(carteLitera3,_)),
        assert(locatieObiect(carteLitera3,JJ)),
        retract(locatieObiect(scrisoareLitera1,_)),
        assert(locatieObiect(scrisoareLitera1,K)),
        retract(locatieObiect(ghicitoare,_)),
        assert(locatieObiect(ghicitoare,L)),
        retract(locatieObiect(cheie,_)),
        assert(locatieObiect(cheie,M)),
        retract(locatieObiect(seif,_)),
        assert(locatieObiect(seif,N)),
        retract(locatieObiect(carteLitera2,_)),
        assert(locatieObiect(carteLitera2,O)),
        retract(locatieObiect(bilet,_)),
        assert(locatieObiect(bilet,P)),
        retract(locatieObiect(lanterna,_)),
        assert(locatieObiect(lanterna,Q)),
        retract(locatieObiect(mar,_)),
        assert(locatieObiect(mar,R)),
        retract(locatieObiect(biscuit,_)),
        assert(locatieObiect(biscuit,S)),
        retract(locatieObiect(scrisoareLitera5,_)),
        assert(locatieObiect(scrisoareLitera5,T)),
        retract(locatieObiect(carteLitera4,_)),
        assert(locatieObiect(carteLitera4,U)),
        retract(locatieObiect(bandaj,_)),
        assert(locatieObiect(bandaj,LocatieB)),
        retract(energieJucator(_)),
        assert(energieJucator(V)),
        retract(raspunsGhicitoare(_)),
        assert(raspunsGhicitoare(X)),
        retract(litera1(_)),
        assert(litera1(Lit11)),
        retract(litera2(_)),
        assert(litera2(Lit21)),
        retract(litera3(_)),
        assert(litera3(Lit31)),
        retract(litera4(_)),
        assert(litera4(Lit41)),
        retract(litera5(_)),
        assert(litera5(Lit51)),
        retract(viata(_)),
        assert(viata(Y)),
        retract(amInceput(_)),
        assert(amInceput(Z)),
        retract(codReal(_)),
        assert(codReal(Z11)),
        retract(utilizareLanterna(_)),
        assert(utilizareLanterna(UtilizareLanterna)),
        retract(camereParcurse(_)),
        assert(camereParcurse(CamereParcurse)),
        retract(numarPlanCasa(_)),
        assert(numarPlanCasa(NRH)),
        retract(locatieObiect(baterie,_)),
        assert(locatieObiect(baterie,LocatieBaterie)),
        efectuareModificari(NrCapcane),
        stabilireIntrebare(NRG),!.

determinaStareCapcane(CamereCapcane,NrCapcane):-
                CamereCapcane = [w,n] ->
                NrCapcane = 0,!;
                CamereCapcane = [n,s ] ->
                NrCapcane = 1,!;
                CamereCapcane = [s,w] ->
                NrCapcane = 2,!.